<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cdut.zhong.tm.dao.UserordersMapper">
  <resultMap id="BaseResultMap" type="com.cdut.zhong.tm.bean.Userorders">
    <result column="id" jdbcType="INTEGER" property="id" />
    <result column="ordercode" jdbcType="VARCHAR" property="ordercode" />
    <result column="goodsid" jdbcType="INTEGER" property="goodsid" />
    <result column="receiveaddress" jdbcType="VARCHAR" property="receiveaddress" />
    <result column="receiveusermsg" jdbcType="VARCHAR" property="receiveusermsg" />
    <result column="zipcode" jdbcType="VARCHAR" property="zipcode" />
    <result column="userphone" jdbcType="VARCHAR" property="userphone" />
    <result column="placedate" jdbcType="TIMESTAMP" property="placedate" />
    <result column="deliverdate" jdbcType="TIMESTAMP" property="deliverdate" />
    <result column="paymentdate" jdbcType="TIMESTAMP" property="paymentdate" />
    <result column="receivingdate" jdbcType="TIMESTAMP" property="receivingdate" />
    <result column="orderstate" jdbcType="VARCHAR" property="orderstate" />
    <result column="userremarks" jdbcType="VARCHAR" property="userremarks" />
    <result column="goodsnum" jdbcType="INTEGER" property="goodsnum" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, ordercode, goodsid, receiveaddress, receiveusermsg, zipcode, userphone, placedate, 
    deliverdate, paymentdate, receivingdate, orderstate, userremarks, goodsnum
  </sql>
  <sql id="Base_Column_orderList">
    orders.id,orders.ordercode,orders.placedate,orders.goodsid,g.name,g.price,orders.goodsnum,orders.orderstate,(g.price *orders.goodsnum) as allprice
  </sql>
  <select id="selectByExample" parameterType="com.cdut.zhong.tm.bean.UserordersExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from userorders
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from userorders
    where ordercode=#{ordercode,jdbcType=VARCHAR}
  </select>
  <select id="selectOrder" parameterType="java.lang.Integer" resultType="com.cdut.zhong.tm.bean.OrderDetailBean">
    select
    <include refid="Base_Column_orderList" />
    from userorders orders left join goods g on orders.goodsid=g.id
    where orders.id=#{id,jdbcType=INTEGER}
    order by placedate desc
  </select>

  <delete id="deleteByExample" parameterType="com.cdut.zhong.tm.bean.UserordersExample">
    delete from userorders
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.cdut.zhong.tm.bean.Userorders">
    insert into userorders (id, ordercode, goodsid, 
      receiveaddress, receiveusermsg, zipcode, 
      userphone, placedate, deliverdate, 
      paymentdate, receivingdate, orderstate, 
      userremarks, goodsnum)
    values (#{id,jdbcType=INTEGER}, #{ordercode,jdbcType=VARCHAR}, #{goodsid,jdbcType=INTEGER}, 
      #{receiveaddress,jdbcType=VARCHAR}, #{receiveusermsg,jdbcType=VARCHAR}, #{zipcode,jdbcType=VARCHAR}, 
      #{userphone,jdbcType=VARCHAR}, #{placedate,jdbcType=TIMESTAMP}, #{deliverdate,jdbcType=TIMESTAMP}, 
      #{paymentdate,jdbcType=TIMESTAMP}, #{receivingdate,jdbcType=TIMESTAMP}, #{orderstate,jdbcType=VARCHAR}, 
      #{userremarks,jdbcType=VARCHAR}, #{goodsnum,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.cdut.zhong.tm.bean.Userorders">
    insert into userorders
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="ordercode != null">
        ordercode,
      </if>
      <if test="goodsid != null">
        goodsid,
      </if>
      <if test="receiveaddress != null">
        receiveaddress,
      </if>
      <if test="receiveusermsg != null">
        receiveusermsg,
      </if>
      <if test="zipcode != null">
        zipcode,
      </if>
      <if test="userphone != null">
        userphone,
      </if>
      <if test="placedate != null">
        placedate,
      </if>
      <if test="deliverdate != null">
        deliverdate,
      </if>
      <if test="paymentdate != null">
        paymentdate,
      </if>
      <if test="receivingdate != null">
        receivingdate,
      </if>
      <if test="orderstate != null">
        orderstate,
      </if>
      <if test="userremarks != null">
        userremarks,
      </if>
      <if test="goodsnum != null">
        goodsnum,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="ordercode != null">
        #{ordercode,jdbcType=VARCHAR},
      </if>
      <if test="goodsid != null">
        #{goodsid,jdbcType=INTEGER},
      </if>
      <if test="receiveaddress != null">
        #{receiveaddress,jdbcType=VARCHAR},
      </if>
      <if test="receiveusermsg != null">
        #{receiveusermsg,jdbcType=VARCHAR},
      </if>
      <if test="zipcode != null">
        #{zipcode,jdbcType=VARCHAR},
      </if>
      <if test="userphone != null">
        #{userphone,jdbcType=VARCHAR},
      </if>
      <if test="placedate != null">
        #{placedate,jdbcType=TIMESTAMP},
      </if>
      <if test="deliverdate != null">
        #{deliverdate,jdbcType=TIMESTAMP},
      </if>
      <if test="paymentdate != null">
        #{paymentdate,jdbcType=TIMESTAMP},
      </if>
      <if test="receivingdate != null">
        #{receivingdate,jdbcType=TIMESTAMP},
      </if>
      <if test="orderstate != null">
        #{orderstate,jdbcType=VARCHAR},
      </if>
      <if test="userremarks != null">
        #{userremarks,jdbcType=VARCHAR},
      </if>
      <if test="goodsnum != null">
        #{goodsnum,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.cdut.zhong.tm.bean.UserordersExample" resultType="java.lang.Long">
    select count(*) from userorders
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update userorders
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.ordercode != null">
        ordercode = #{record.ordercode,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsid != null">
        goodsid = #{record.goodsid,jdbcType=INTEGER},
      </if>
      <if test="record.receiveaddress != null">
        receiveaddress = #{record.receiveaddress,jdbcType=VARCHAR},
      </if>
      <if test="record.receiveusermsg != null">
        receiveusermsg = #{record.receiveusermsg,jdbcType=VARCHAR},
      </if>
      <if test="record.zipcode != null">
        zipcode = #{record.zipcode,jdbcType=VARCHAR},
      </if>
      <if test="record.userphone != null">
        userphone = #{record.userphone,jdbcType=VARCHAR},
      </if>
      <if test="record.placedate != null">
        placedate = #{record.placedate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.deliverdate != null">
        deliverdate = #{record.deliverdate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.paymentdate != null">
        paymentdate = #{record.paymentdate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.receivingdate != null">
        receivingdate = #{record.receivingdate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.orderstate != null">
        orderstate = #{record.orderstate,jdbcType=VARCHAR},
      </if>
      <if test="record.userremarks != null">
        userremarks = #{record.userremarks,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsnum != null">
        goodsnum = #{record.goodsnum,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update userorders
    set id = #{record.id,jdbcType=INTEGER},
      ordercode = #{record.ordercode,jdbcType=VARCHAR},
      goodsid = #{record.goodsid,jdbcType=INTEGER},
      receiveaddress = #{record.receiveaddress,jdbcType=VARCHAR},
      receiveusermsg = #{record.receiveusermsg,jdbcType=VARCHAR},
      zipcode = #{record.zipcode,jdbcType=VARCHAR},
      userphone = #{record.userphone,jdbcType=VARCHAR},
      placedate = #{record.placedate,jdbcType=TIMESTAMP},
      deliverdate = #{record.deliverdate,jdbcType=TIMESTAMP},
      paymentdate = #{record.paymentdate,jdbcType=TIMESTAMP},
      receivingdate = #{record.receivingdate,jdbcType=TIMESTAMP},
      orderstate = #{record.orderstate,jdbcType=VARCHAR},
      userremarks = #{record.userremarks,jdbcType=VARCHAR},
      goodsnum = #{record.goodsnum,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>