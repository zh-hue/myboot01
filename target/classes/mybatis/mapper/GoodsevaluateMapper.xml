<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cdut.zhong.tm.dao.GoodsevaluateMapper">
  <resultMap id="BaseResultMap" type="com.cdut.zhong.tm.bean.Goodsevaluate">
    <result column="id" jdbcType="INTEGER" property="id" />
    <result column="evaluate" jdbcType="VARCHAR" property="evaluate" />
    <result column="evaluatetime" jdbcType="TIMESTAMP" property="evaluatetime" />
    <result column="userid" jdbcType="INTEGER" property="userid" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, evaluate, evaluatetime, userid
  </sql>
  <sql id="Base_Column_ListBean">
    g.evaluate, g.evaluatetime, u.username
  </sql>
  <select id="selectByExample" parameterType="com.cdut.zhong.tm.bean.GoodsevaluateExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from goodsevaluate
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByGoodsId" parameterType="java.lang.Integer" resultType="com.cdut.zhong.tm.bean.SevaluateBean">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_ListBean" />
    from goodsevaluate g left join userinformation u on g.userid = u.id
    where g.id=#{id,jdbcType=INTEGER}
    order by evaluatetime desc
  </select>

  <delete id="deleteByExample" parameterType="com.cdut.zhong.tm.bean.GoodsevaluateExample">
    delete from goodsevaluate
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.cdut.zhong.tm.bean.Goodsevaluate">
    insert into goodsevaluate (id, evaluate, evaluatetime, 
      userid)
    values (#{id,jdbcType=INTEGER}, #{evaluate,jdbcType=VARCHAR}, #{evaluatetime,jdbcType=TIMESTAMP}, 
      #{userid,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.cdut.zhong.tm.bean.Goodsevaluate">
    insert into goodsevaluate
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="evaluate != null">
        evaluate,
      </if>
      <if test="evaluatetime != null">
        evaluatetime,
      </if>
      <if test="userid != null">
        userid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="evaluate != null">
        #{evaluate,jdbcType=VARCHAR},
      </if>
      <if test="evaluatetime != null">
        #{evaluatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="userid != null">
        #{userid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.cdut.zhong.tm.bean.GoodsevaluateExample" resultType="java.lang.Long">
    select count(*) from goodsevaluate
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update goodsevaluate
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.evaluate != null">
        evaluate = #{record.evaluate,jdbcType=VARCHAR},
      </if>
      <if test="record.evaluatetime != null">
        evaluatetime = #{record.evaluatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.userid != null">
        userid = #{record.userid,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update goodsevaluate
    set id = #{record.id,jdbcType=INTEGER},
      evaluate = #{record.evaluate,jdbcType=VARCHAR},
      evaluatetime = #{record.evaluatetime,jdbcType=TIMESTAMP},
      userid = #{record.userid,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>